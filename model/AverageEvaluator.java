package model;

import java.util.List;

/**
 * This is a Singleton class that handles operations related to 
 * computing average for all the points data generated by the DataSource.
 * It implements the Singleton design pattern by ensuring that 
 * an object of this class is created only after verifying 
 * whether an object has already been instantiated or not.
 * 
 * @author Mukul Mahadik
 * @version 1.0
 */
public class AverageEvaluator {
    private static AverageEvaluator instance;
    private double average;
    
    protected AverageEvaluator() {}

     /** 
     * Returns instantiated object of this class
     */   
    public static AverageEvaluator getInstance() {
        if (instance == null)
            instance = new AverageEvaluator();
        return instance;
    }    

    /** 
     * Returns computed average of coordinates
     */
    public double getAverage() {
        return average;
    }

    /**
     * Computes average of all the data values generated
     * @param scores Stores randomly generated points data
     */
    public void calculate(List<Integer> scores) {
        double sum = 0;
        for (Integer i : scores) {
            sum += i;
        }
        average = sum/scores.size();
    }

}